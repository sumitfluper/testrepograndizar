{"input":{"ourVersion":"1.33.1","commit":"51b0b28134d51361cf996d2f0a1c698247aeabd8","locale":"en","devMode":false,"absoluteFolderPath":"/home/fluper/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1556713895285},"result":[{"name":"Bookmarks","displayName":"Bookmarks","description":"Mark lines and jump to them","version":"10.4.3","publisher":"alefragnani","galleryBanner":{"color":"#000000","theme":"dark"},"engines":{"vscode":"^1.32.0"},"categories":["Other"],"keywords":["bookmark","sticky","jump","mark","selection","navigation","multi-root ready"],"icon":"images/icon.png","license":"SEE LICENSE IN LICENSE.md","homepage":"https://github.com/alefragnani/vscode-bookmarks/blob/master/README.md","repository":{"type":"git","url":"https://github.com/alefragnani/vscode-bookmarks.git"},"bugs":{"url":"https://github.com/alefragnani/vscode-bookmarks/issues"},"activationEvents":["*","onView:bookmarksExplorer"],"main":"/home/fluper/.vscode/extensions/alefragnani.bookmarks-10.4.3/dist/extension","contributes":{"viewsContainers":{"activitybar":[{"id":"bookmarks","title":"Bookmarks","icon":"images/bookmark-activity-bar.svg"}]},"views":{"bookmarks":[{"id":"bookmarksExplorer","name":"Explorer"}]},"commands":[{"command":"bookmarks.toggle","title":"Bookmarks: Toggle"},{"command":"bookmarks.jumpToNext","title":"Bookmarks: Jump to Next"},{"command":"bookmarks.jumpToPrevious","title":"Bookmarks: Jump to Previous"},{"command":"bookmarks.jumpTo","title":"Bookmarks: Jump to Document/Line"},{"command":"bookmarks.selectLines","title":"Bookmarks (Selection): Select Lines"},{"command":"bookmarks.expandSelectionToNext","title":"Bookmarks (Selection): Expand Selection to Next"},{"command":"bookmarks.expandSelectionToPrevious","title":"Bookmarks (Selection): Expand Selection to Previous"},{"command":"bookmarks.shrinkSelection","title":"Bookmarks (Selection): Shrink Selection"},{"command":"bookmarks.list","title":"Bookmarks: List"},{"command":"bookmarks.toggleLabeled","title":"Bookmarks: Toggle Labeled"},{"command":"bookmarks.refresh","title":"Refresh","icon":{"light":"images/refresh-light.svg","dark":"images/refresh-dark.svg"}},{"command":"bookmarks.clear","title":"Bookmarks: Clear"},{"command":"bookmarks.clearFromFile","title":"Clear"},{"command":"bookmarks.deleteBookmark","title":"Delete"},{"command":"bookmarks.editLabel","title":"Edit Label"},{"command":"bookmarks.listFromAllFiles","title":"Bookmarks: List from All Files"},{"command":"bookmarks.clearFromAllFiles","title":"Bookmarks: Clear from All Files"},{"command":"bookmarks.whatsNew","title":"Bookmarks: What's New"}],"menus":{"commandPalette":[{"command":"bookmarks.jumpTo","when":"false"},{"command":"bookmarks.refresh","when":"false"},{"command":"bookmarks.clearFromFile","when":"false"},{"command":"bookmarks.deleteBookmark","when":"false"},{"command":"bookmarks.editLabel","when":"false"}],"editor/context":[{"command":"bookmarks.toggle","group":"bookmarks","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"},{"command":"bookmarks.jumpToNext","group":"bookmarks@1","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"},{"command":"bookmarks.jumpToPrevious","group":"bookmarks@1","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"}],"editor/title":[{"command":"bookmarks.list","group":"bookmarks"},{"command":"bookmarks.clear","group":"bookmarks"},{"command":"bookmarks.selectLines","group":"bookmarks"}],"view/title":[{"command":"bookmarks.refresh","when":"view == bookmarksExplorer","group":"navigation"}],"view/item/context":[{"command":"bookmarks.clearFromFile","when":"view == bookmarksExplorer && viewItem == BookmarkNodeFile"},{"command":"bookmarks.deleteBookmark","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark"},{"command":"bookmarks.editLabel","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark"}]},"configuration":{"type":"object","title":"Bookmarks","properties":{"bookmarks.saveBookmarksInProject":{"type":"boolean","default":false,"description":"Allow bookmarks to be saved (and restored) locally in the opened Project/Folder instead of VS Code"},"bookmarks.gutterIconPath":{"type":"string","default":"","description":"Path to another image to be presented as Bookmark"},"bookmarks.backgroundLineColor":{"type":"string","default":"","description":"Background color of the decoration. Use rgba() and define transparent background colors to play well with other decorations. Ex.: rgba(21, 126, 251, 0.1)"},"bookmarks.navigateThroughAllFiles":{"type":"boolean","default":false,"description":"Allow navigation look for bookmarks in all files in the project, instead of only the current"},"bookmarks.wrapNavigation":{"type":"boolean","default":true,"description":"Allow navigation to wrap around at the first and last bookmarks in scope (current file or all files)"},"bookmarks.useWorkaroundForFormatters":{"type":"boolean","default":false,"description":"Use a workaround for formatters like Prettier, which does not notify on document changes and messes Bookmark's Sticky behavior"},"bookmarks.showCommandsInContextMenu":{"type":"boolean","default":true,"description":"Specifies whether Bookmarks commands are displayed on the context menu"}}},"keybindings":[{"command":"bookmarks.toggle","key":"ctrl+alt+k","mac":"cmd+alt+k","when":"editorTextFocus"},{"command":"bookmarks.jumpToNext","key":"ctrl+alt+l","mac":"cmd+alt+l","when":"editorTextFocus"},{"command":"bookmarks.jumpToPrevious","key":"ctrl+alt+j","mac":"cmd+alt+j","when":"editorTextFocus"},{"command":"bookmarks.shrinkSelection","key":"shift+alt+k","mac":"shift+alt+k","when":"editorTextFocus"},{"command":"bookmarks.expandSelectionToNext","key":"shift+alt+l","mac":"shift+alt+l","when":"editorTextFocus"},{"command":"bookmarks.expandSelectionToPrevious","key":"shift+alt+j","mac":"shift+alt+j","when":"editorTextFocus"}]},"scripts":{"build":"webpack --mode development","watch":"webpack --watch --mode development --info-verbosity verbose","vscode:prepublish":"webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/node":"^6.0.40","typescript":"^3.1.6","vscode":"^1.1.28","webpack":"^4.19.1","webpack-cli":"^3.1.0","ts-loader":"^4.4.2","terser-webpack-plugin":"^1.2.1"},"uuid":"b689fcc8-d494-4dbf-a228-2c694a578afc","isBuiltin":false,"isUnderDevelopment":false,"id":"alefragnani.Bookmarks","identifier":{"value":"alefragnani.Bookmarks","_lower":"alefragnani.bookmarks"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/alefragnani.bookmarks-10.4.3","path":"/home/fluper/.vscode/extensions/alefragnani.bookmarks-10.4.3","scheme":"file"}},{"name":"bracket-pair-colorizer","displayName":"Bracket Pair Colorizer","description":"A customizable extension for colorizing matching brackets","version":"1.0.61","publisher":"CoenraadS","engines":{"vscode":"^1.23.0"},"icon":"images/icon.png","categories":["Other"],"activationEvents":["*"],"keywords":["bracket","brackets","pair","color","colour","multi-root ready"],"galleryBanner":{"color":"#1E1E1E","theme":"dark"},"main":"/home/fluper/.vscode/extensions/coenraads.bracket-pair-colorizer-1.0.61/out/src/extension","contributes":{"commands":[{"command":"bracket-pair-colorizer.expandBracketSelection","title":"Expand Bracket Selection"},{"command":"bracket-pair-colorizer.undoBracketSelection","title":"Undo Bracket Selection"}],"configuration":{"type":"object","title":"BracketPair","properties":{"bracketPairColorizer.timeOut":{"type":"number","default":200,"description":"How long the user should idle for, before the document is colorized. Set to 0 to disable","scope":"resource"},"bracketPairColorizer.forceUniqueOpeningColor":{"type":"boolean","default":false,"description":"Ensure that an opening brackets color does not match a previous brackets color","scope":"resource"},"bracketPairColorizer.forceIterationColorCycle":{"type":"boolean","default":false,"description":"Should opening brackets iterate the color cycle even if they are not nested","scope":"resource"},"bracketPairColorizer.colorMode":{"type":"string","enum":["Consecutive","Independent"],"default":"Consecutive","description":"Should different brackets share a color group (Consecutive), or use their own color group (Independent)","scope":"resource"},"bracketPairColorizer.highlightActiveScope":{"type":"boolean","default":false,"description":"Should the active scope brackets always be highlighted? Recommended to disable editor.matchBrackets if using this feature.","scope":"resource"},"bracketPairColorizer.activeScopeCSS":{"type":"array","default":["borderStyle : solid","borderWidth : 1px","borderColor : {color}; opacity: 0.5"],"description":"CSS for the active scope. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used","scope":"resource"},"bracketPairColorizer.showBracketsInGutter":{"type":"boolean","default":false,"description":"Show active bracket scope in gutter?","scope":"resource"},"bracketPairColorizer.showBracketsInRuler":{"type":"boolean","default":false,"description":"Show active bracket scope in ruler?","scope":"resource"},"bracketPairColorizer.rulerPosition":{"type":"string","enum":["Center","Full","Left","Right"],"default":"Center","description":"Show active bracket scope in ruler?","scope":"resource"},"bracketPairColorizer.showVerticalScopeLine":{"type":"boolean","default":true,"description":"Show a vertical line on the left side of the editor representing the active bracket scope?","scope":"resource"},"bracketPairColorizer.showHorizontalScopeLine":{"type":"boolean","default":true,"description":"Show a horizontal line to create a block around the active bracket scope?","scope":"resource"},"bracketPairColorizer.scopeLineRelativePosition":{"type":"boolean","default":true,"description":"True: Scope Line will start from the ending bracket position. False: Scope Line will always be at column 0","scope":"resource"},"bracketPairColorizer.scopeLineCSS":{"type":"array","default":["borderStyle : solid","borderWidth : 1px","borderColor : {color}; opacity: 0.5"],"description":"CSS for the scope line. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used","scope":"resource"},"bracketPairColorizer.consecutivePairColors":{"type":"array","default":["()","[]","{}",["Gold","Orchid","LightSkyBlue"],"Red"],"description":"Define paired characters and their shared color group","scope":"resource"},"bracketPairColorizer.independentPairColors":{"type":["array"],"items":{"type":["array"]},"default":[["()",["Gold","Orchid","LightSkyBlue"],"Red"],["[]",["Gold","Orchid","LightSkyBlue"],"Red"],["{}",["Gold","Orchid","LightSkyBlue"],"Red"]],"description":"Define paired characters and their color groups","scope":"resource"},"bracketPairColorizer.excludedLanguages":{"type":"array","default":[],"description":"Don't colorize files of these languages","scope":"window"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.107","@types/prismjs":"^1.9.0","mocha":"^2.3.3","tslint":"^4.5.1","typescript":"^2.8.3","vscode":"^1.1.16"},"repository":{"type":"git","url":"https://github.com/CoenraadS/BracketPair"},"license":"SEE LICENSE IN LICENSE.md","dependencies":{"escape-html":"^1.0.3","prismjs":"^1.15.0","vscode-uri":"^1.0.3"},"uuid":"f583eafd-aa0d-4ccb-8f44-d1e610389660","isBuiltin":false,"isUnderDevelopment":false,"id":"CoenraadS.bracket-pair-colorizer","identifier":{"value":"CoenraadS.bracket-pair-colorizer","_lower":"coenraads.bracket-pair-colorizer"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/coenraads.bracket-pair-colorizer-1.0.61","path":"/home/fluper/.vscode/extensions/coenraads.bracket-pair-colorizer-1.0.61","scheme":"file"}},{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge the Git capabilities built into Visual Studio Code — Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more","version":"9.6.3","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"publisher":"eamodio","license":"SEE LICENSE IN LICENSE","homepage":"https://github.com/eamodio/vscode-gitlens/blob/master/README.md","bugs":{"url":"https://github.com/eamodio/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/eamodio/vscode-gitlens.git"},"engines":{"vscode":"^1.30.0"},"main":"/home/fluper/.vscode/extensions/eamodio.gitlens-9.6.3/dist/extension","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/vscode--dev--community-gitlens-blue.svg?logo=slack","href":"https://vscode-slack.amod.io","description":"Join us in the #gitlens channel"}],"categories":["Other"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"GitLens","properties":{"gitlens.blame.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in the gutter blame annotations","scope":"window"},"gitlens.blame.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations","scope":"window"},"gitlens.blame.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (using the `${date}` token) in gutter blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.blame.format":{"type":"string","default":"${message|40?} ${agoOrDate|14-}","markdownDescription":"Specifies the format of the gutter blame annotations. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.blame.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a heatmap indicator in the gutter blame annotations","scope":"window"},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the gutter blame annotations","Adds a heatmap indicator on the right edge of the gutter blame annotations"],"markdownDescription":"Specifies where the heatmap indicators will be shown in the gutter blame annotations","scope":"window"},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight lines associated with the current line","scope":"window"},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the associated line highlights will be shown","scope":"window"},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource"},"gitlens.blame.separateLines":{"type":"boolean","default":true,"markdownDescription":"Specifies whether gutter blame annotations will be separated by a small gap","scope":"window"},"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter blame annotations will be toggled","scope":"window"},"gitlens.codeLens.authors.command":{"type":"string","default":"gitlens.toggleFileBlame","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when an _authors_ code lens is clicked","scope":"window"},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an _authors_ code lens, showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window"},"gitlens.codeLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any Git code lens, by default. Use the `Toggle Git Code Lens` command (`gitlens.toggleCodeLens`) to toggle the Git code lens on and off for the current window","scope":"window"},"gitlens.codeLens.includeSingleLineSymbols":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to provide any Git code lens on symbols that span only a single line","scope":"window"},"gitlens.codeLens.recentChange.command":{"type":"string","default":"gitlens.showQuickCommitFileDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when a _recent change_ code lens is clicked","scope":"window"},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _recent change_ code lens, showing the author and date of the most recent commit for the file or code block","scope":"window"},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":1,"maxItems":4,"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document","scope":"resource"},"gitlens.codeLens.scopesByLanguage":{"type":"array","default":[{"language":"azure-pipelines","scopes":["document"]},{"language":"css","scopes":["document"]},{"language":"html","scopes":["document"]},{"language":"json","scopes":["document"]},{"language":"jsonc","scopes":["document"]},{"language":"less","scopes":["document"]},{"language":"postcss","scopes":["document"]},{"language":"python","symbolScopes":["!Module"]},{"language":"scss","scopes":["document"]},{"language":"stylus","scopes":["document"]},{"language":"vue","scopes":["document"]},{"language":"yaml","scopes":["document"]}],"items":{"type":"object","required":["language"],"properties":{"language":{"type":"string","description":"Specifies the language to which this code lens override applies"},"scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks","custom"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, properties, etc) lines","Adds code lens at the start of symbols contained in `symbolScopes`"]},"minItems":1,"maxItems":4,"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document for the specified language"},"symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"description":"Specifies the set of document symbols where Git code lens will be shown in the document for the specified language. Must be a member of `SymbolKind`"}}},"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document for the specified languages","scope":"resource"},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Specifies a set of document symbols where Git code lens will or will not be shown in the document. Prefix with `!` to avoid providing a Git code lens for the symbol. Must be a member of `SymbolKind`","scope":"resource"},"gitlens.currentLine.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window"},"gitlens.currentLine.format":{"type":"string","default":"${authorAgoOrDate} • ${message}","markdownDescription":"Specifies the format of the current line blame annotation. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.currentLine.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport","scope":"window"},"gitlens.debug":{"type":"boolean","default":false,"markdownDescription":"Specifies debug mode","scope":"window"},"gitlens.defaultDateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateShortFormat":{"type":"string","default":null,"markdownDescription":"Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed by default","scope":"window"},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mp","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"markdownDescription":"Specifies the style of the gravatar default (fallback) images","scope":"window"},"gitlens.heatmap.ageThreshold":{"type":"string","default":"90","markdownDescription":"Specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window"},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter heatmap annotations will be toggled","scope":"window"},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers when showing blame annotations","scope":"window"},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers for the current line","scope":"window"},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers for the current line","scope":"window"},"gitlens.hovers.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in hovers","scope":"window"},"gitlens.hovers.changesDiff":{"type":"string","default":"line","enum":["line","hunk"],"enumDescriptions":["Shows only the changes to the line","Shows the set of related changes"],"markdownDescription":"Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover","scope":"window"},"gitlens.hovers.detailsMarkdownFormat":{"type":"string","default":"[${avatar} &nbsp;__${author}__](mailto:${email}), ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${commands}","markdownDescription":"Specifies the format (in markdown) of the _commit details_ hover. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`\n - `${avatar}` &mdash; commit author avatar\n - `${commands}` &mdash; a set of commit commands","scope":"window"},"gitlens.hovers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers","scope":"window"},"gitlens.insiders":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to enable experimental features","scope":"window"},"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"markdownDescription":"Specifies the keymap to use for GitLens shortcut keys","scope":"window"},"gitlens.liveshare.allowGuestAccess":{"type":"boolean","default":true,"description":"Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share","scope":"window"},"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"details":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"scmGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"openClose":{"type":"boolean"},"stash":{"type":"boolean"},"stashInline":{"type":"boolean"}}}]},"scmItem":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"},"stash":{"type":"boolean"}}}]}}}],"default":{"editor":{"blame":false,"clipboard":true,"compare":true,"details":false,"history":false,"remote":false},"editorGroup":{"blame":true,"compare":true},"editorTab":{"clipboard":true,"compare":true,"history":true,"remote":true},"explorer":{"clipboard":true,"compare":true,"history":true,"remote":true},"scmGroup":{"compare":true,"openClose":true,"stash":true,"stashInline":true},"scmItem":{"clipboard":true,"compare":true,"history":true,"remote":true,"stash":true}},"markdownDescription":"Specifies which commands will be added to which menus","scope":"window"},"gitlens.mode.active":{"type":"string","markdownDescription":"Specifies the active GitLens mode, if any","scope":"window"},"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide the active GitLens mode in the status bar","scope":"window"},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the active GitLens mode alignment in the status bar","scope":"window"},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"review":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"annotations":{"type":"string","enum":["blame","heatmap","recentChanges"],"enumDescriptions":["Shows the gutter blame annotations","Shows the gutter heatmap annotations","Shows the recently changed lines annotations"],"description":"Specifies which (if any) file annotations will be shown when this user-defined mode is active"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"markdownDescription":"Specifies the user-defined GitLens modes","scope":"window"},"gitlens.outputLevel":{"type":"string","default":"errors","enum":["silent","errors","verbose","debug"],"enumDescriptions":["Logs nothing","Logs only errors","Logs all errors, warnings, and messages","Logs all errors, warnings, and messages with extra context useful for debugging"],"markdownDescription":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window"},"gitlens.recentChanges.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the highlights of the recently changed lines will be shown","scope":"window"},"gitlens.recentChanges.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the recently changed lines annotations will be toggled","scope":"window"},"gitlens.remotes":{"type":"array","default":null,"items":{"type":"object","required":["type","domain"],"properties":{"type":{"type":"string","enum":["Bitbucket","BitbucketServer","Custom","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name of the custom remote service"},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional url protocol for the custom remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","description":"Specifies the format of a respository url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path"},"branches":{"type":"string","description":"Specifies the format of a branches url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"branch":{"type":"string","description":"Specifies the format of a branch url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"commit":{"type":"string","description":"Specifies the format of a commit url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${id}` &mdash; commit id"},"file":{"type":"string","description":"Specifies the format of a file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${line}` &mdash; formatted line information"},"fileInBranch":{"type":"string","description":"Specifies the format of a branch file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${branch}` &mdash; branch\n ${line}` &mdash; formatted line information"},"fileInCommit":{"type":"string","description":"Specifies the format of a commit file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${id}` &mdash; commit id\n ${line}` &mdash; formatted line information"},"fileLine":{"type":"string","description":"Specifies the format of a line in a file url for the custom remote service\nAvailable tokens\n ${line}` &mdash; line"},"fileRange":{"type":"string","description":"Specifies the format of a range in a file url for the custom remote service\nAvailable tokens\n ${start}` &mdash; starting line\n ${end}` &mdash; ending line"}}},"description":"Specifies the url formats of the custom remote service"}},"uniqueItems":true,"markdownDescription":"Specifies user-defined remote (code-hosting) services or custom domains for built-in remote services","scope":"resource"},"gitlens.settings.mode":{"type":"string","default":"simple","enum":["simple","advanced"],"enumDescriptions":["Only displays common settings","Displays all settings"],"markdownDescription":"Specifies the display mode of the interactive settings editor","scope":"window"},"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show What's New after upgrading to new feature releases","scope":"window"},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the blame alignment in the status bar","scope":"window"},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.toggleCodeLens","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current line commit with the previous","Compares the current line commit with the working tree","Toggles Git code lens","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window"},"gitlens.statusBar.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies the date format of absolute dates shown in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide blame information in the status bar","scope":"window"},"gitlens.statusBar.format":{"type":"string","default":"${authorAgoOrDate}","markdownDescription":"Specifies the format of the gutter blame annotations. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.statusBar.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"Unsaved changes (cannot determine recent change or authors)","markdownDescription":"Specifies the string to be shown in place of both the _recent change_ and _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"Unsaved changes (cannot determine recent change)","markdownDescription":"Specifies the string to be shown in place of the _recent change_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"Unsaved changes (cannot determine authors)","markdownDescription":"Specifies the string to be shown in place of the _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.views.commitFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.commitFileDescriptionFormat":{"type":"string","default":"${directory}","markdownDescription":"Specifies the description format of a committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.commitFormat":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of committed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.commitDescriptionFormat":{"type":"string","default":"${changes  •  }${authorAgoOrDate}","markdownDescription":"Specifies the description format of committed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.compare.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Compare_ view","scope":"window"},"gitlens.views.compare.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Compare_ view","scope":"window"},"gitlens.views.compare.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.compare.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.compare.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Compare_ view will display files","scope":"window"},"gitlens.views.compare.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.compare.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Compare_ view","scope":"window"},"gitlens.views.defaultItemLimit":{"type":"number","default":10,"markdownDescription":"Specifies the default number of items to show in a view list. Use 0 to specify no limit","scope":"window"},"gitlens.views.pageItemLimit":{"type":"number","default":20,"markdownDescription":"Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit","scope":"window"},"gitlens.views.fileHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _File History_ view","scope":"window"},"gitlens.views.fileHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _File History_ view","scope":"window"},"gitlens.views.fileHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _File History_ view","scope":"window"},"gitlens.views.lineHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Line History_ view","scope":"window"},"gitlens.views.repositories.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes","scope":"window"},"gitlens.views.repositories.autoReveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files","scope":"window"},"gitlens.views.repositories.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Repositories_ view will display branches","scope":"window"},"gitlens.views.repositories.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Repositories_ view in a compact display density","scope":"window"},"gitlens.views.repositories.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.repositories.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Repositories_ view will display files","scope":"window"},"gitlens.views.repositories.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.repositories.includeWorkingTree":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.showTrackingBranch":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tracking branch when displaying local branches in the _Repositories_ view","scope":"window"},"gitlens.views.search.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Search Commits_ view","scope":"window"},"gitlens.views.search.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Search Commits_ view","scope":"window"},"gitlens.views.search.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.search.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.search.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Search Commits_ view will display files","scope":"window"},"gitlens.views.search.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.search.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Search Commits_ view","scope":"window"},"gitlens.views.showRelativeDateMarkers":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views","scope":"window"},"gitlens.views.stashFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a stashed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.stashFileDescriptionFormat":{"type":"string","default":"${directory}","markdownDescription":"Specifies the description format of a stashed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.stashFormat":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of stashed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.stashDescriptionFormat":{"type":"string","default":"${changes  •  }${agoOrDate}","markdownDescription":"Specifies the description format of stashed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.statusFileFormat":{"type":"string","default":"${working  }${file}","markdownDescription":"Specifies the format of the status of a working or committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path\n - `${working}` &mdash; optional indicator if the file is uncommitted","scope":"window"},"gitlens.views.statusFileDescriptionFormat":{"type":"string","default":"${directory}","markdownDescription":"Specifies the description format of the status of a working or committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path\n - `${working}` &mdash; optional indicator if the file is uncommitted","scope":"window"},"gitlens.advanced.abbreviatedShaLength":{"type":"number","default":"7","markdownDescription":"Specifies the length of abbreviated commit ids (shas)","scope":"window"},"gitlens.advanced.blame.customArguments":{"type":"array","default":null,"items":{"type":"string"},"markdownDescription":"Specifies additional arguments to pass to the `git blame` command","scope":"resource"},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait","scope":"window"},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window"},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file histories will follow renames — will affect how merge commits are shown in histories","scope":"window"},"gitlens.advanced.maxListItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressSupportGitLensNotification":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false},"suppressCommitNotFoundWarning":{"type":"boolean","default":false},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false},"suppressGitDisabledWarning":{"type":"boolean","default":false},"suppressGitVersionWarning":{"type":"boolean","default":false},"suppressLineUncommittedWarning":{"type":"boolean","default":false},"suppressNoRepositoryWarning":{"type":"boolean","default":false},"suppressSupportGitLensNotification":{"type":"boolean","default":false}},"markdownDescription":"Specifies which messages should be suppressed","scope":"window"},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to close QuickPick menus when focus is lost","scope":"window"},"gitlens.advanced.repositorySearchDepth":{"type":"number","default":1,"markdownDescription":"Specifies how many folders deep to search for repositories","scope":"resource"},"gitlens.advanced.telemetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable GitLens telemetry (even if enabled still abides by the overall `#telemetry.enableTelemetry#` setting","scope":"window"}}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the gutter blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the gutter blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the gutter blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the overview ruler color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}}],"commands":[{"command":"gitlens.supportGitLens","title":"Support GitLens ❤","category":"GitLens","icon":{"dark":"images/dark/icon-heart.svg","light":"images/light/icon-heart.svg"}},{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showWelcomePage","title":"Welcome","category":"GitLens"},{"command":"gitlens.showCompareView","title":"Show Compare View","category":"GitLens"},{"command":"gitlens.showFileHistoryView","title":"Show File History View","category":"GitLens"},{"command":"gitlens.showLineHistoryView","title":"Show Line History View","category":"GitLens"},{"command":"gitlens.showRepositoriesView","title":"Show Repositories View","category":"GitLens"},{"command":"gitlens.showSearchView","title":"Show Search Commits View","category":"GitLens"},{"command":"gitlens.diffDirectory","title":"Directory Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffDirectoryWithHead","title":"Directory Compare All Changes","category":"GitLens"},{"command":"gitlens.diffHeadWith","title":"Compare HEAD with...","category":"GitLens"},{"command":"gitlens.diffWorkingWith","title":"Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffWithRef","title":"Open Changes with...","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Open Changes with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"}},{"command":"gitlens.diffWithNextInDiff","title":"Open Changes with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"}},{"command":"gitlens.diffWithPrevious","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffWithPreviousInDiff","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffLineWithPrevious","title":"Open Line Changes with Previous Revision","category":"GitLens"},{"command":"gitlens.diffWithRevision","title":"Open Changes with Revision...","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit-menu.svg","light":"images/light/icon-prev-commit-menu.svg"}},{"command":"gitlens.diffWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.diffWithWorkingInDiff","title":"Open Changes with Working File","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.diffLineWithWorking","title":"Open Line Changes with Working File","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git-orange.svg","light":"images/light/icon-git-orange.svg"}},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","category":"GitLens","icon":{"dark":"images/dark/icon-git-progress.svg","light":"images/light/icon-git-progress.svg"}},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleFileRecentChanges","title":"Toggle Recent File Changes Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame Annotations","category":"GitLens"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git Code Lens","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.showCommitInView","title":"Show Commit in View","category":"GitLens"},{"command":"gitlens.showFileHistoryInView","title":"Show File History in View","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickCommitFileDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickRevisionDetails","title":"Show Revision Details","category":"GitLens","icon":{"dark":"images/dark/icon-commit.svg","light":"images/light/icon-commit.svg"}},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickStashList","title":"Show Stashed Changes","category":"GitLens"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Commit Message to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-clipboard.svg","light":"images/light/icon-clipboard.svg"}},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote Url to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-copy-remote.svg","light":"images/light/icon-copy-remote.svg"}},{"command":"gitlens.copyShaToClipboard","title":"Copy Commit ID to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-copy-commit.svg","light":"images/light/icon-copy-commit.svg"}},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openBranchesInRemote","title":"Open Branches on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openBranchInRemote","title":"Open Branch on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openCommitInRemote","title":"Open Commit on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileInRemote","title":"Open File on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileRevision","title":"Open Revision...","category":"GitLens"},{"command":"gitlens.openFileRevisionFrom","title":"Open Revision from...","category":"GitLens"},{"command":"gitlens.openRepoInRemote","title":"Open Repository on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openWorkingFile","title":"Open Working File","category":"GitLens","icon":{"dark":"images/dark/icon-open-working-file.svg","light":"images/light/icon-open-working-file.svg"}},{"command":"gitlens.stashApply","title":"Apply Stashed Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-pop.svg","light":"images/light/icon-stash-pop.svg"}},{"command":"gitlens.stashDelete","title":"Delete Stashed Changes","category":"GitLens","icon":{"dark":"images/dark/icon-delete.svg","light":"images/light/icon-delete.svg"}},{"command":"gitlens.stashSave","title":"Stash All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.stashSaveFiles","title":"Stash Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.externalDiff","title":"Open Changes (with difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (with difftool)","category":"GitLens"},{"command":"gitlens.resetSuppressedWarnings","title":"Reset Suppressed Warnings","category":"GitLens"},{"command":"gitlens.views.exploreRepoRevision","title":"Explore Repository from Here","category":"GitLens"},{"command":"gitlens.fetchRepositories","title":"Fetch Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.pullRepositories","title":"Pull Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.pushRepositories","title":"Push Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.checkout","title":"Checkout","category":"GitLens","icon":{"dark":"images/dark/icon-checkout.svg","light":"images/light/icon-checkout.svg"}},{"command":"gitlens.views.fetch","title":"Fetch","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.views.pull","title":"Pull","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.views.push","title":"Push","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.pushWithForce","title":"Push (force)","category":"GitLens","icon":{"dark":"images/dark/icon-push-force.svg","light":"images/light/icon-push-force.svg"}},{"command":"gitlens.views.openInTerminal","title":"Open in Terminal","category":"GitLens"},{"command":"gitlens.views.setAsDefault","title":"Set as Default","category":"GitLens"},{"command":"gitlens.views.unsetAsDefault","title":"Unset as Default","category":"GitLens"},{"command":"gitlens.views.stageDirectory","title":"Stage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.stageFile","title":"Stage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.unstageDirectory","title":"Unstage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.unstageFile","title":"Unstage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.star","title":"Add to Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star.svg","light":"images/light/icon-star.svg"}},{"command":"gitlens.views.unstar","title":"Remove from Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star-filled.svg","light":"images/light/icon-star-filled.svg"}},{"command":"gitlens.views.openDirectoryDiff","title":"Open Directory Compare","category":"GitLens"},{"command":"gitlens.views.openDirectoryDiffWithWorking","title":"Open Directory Compare with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChanges","title":"Open Changes","category":"GitLens"},{"command":"gitlens.views.openChangesWithWorking","title":"Open Changes with Working File","category":"GitLens"},{"command":"gitlens.views.openFile","title":"Open File","category":"GitLens","icon":{"dark":"images/dark/icon-open-file.svg","light":"images/light/icon-open-file.svg"}},{"command":"gitlens.views.openFileRevision","title":"Open Revision","category":"GitLens"},{"command":"gitlens.views.openFileRevisionInRemote","title":"Open Revision on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.views.openChangedFiles","title":"Open Files","category":"GitLens"},{"command":"gitlens.views.openChangedFileChanges","title":"Open All Changes","category":"GitLens"},{"command":"gitlens.views.openChangedFileChangesWithWorking","title":"Open All Changes with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChangedFileRevisions","title":"Open Revisions","category":"GitLens"},{"command":"gitlens.views.applyChanges","title":"Apply Changes","category":"GitLens"},{"command":"gitlens.views.closeRepository","title":"Close Repository","category":"GitLens"},{"command":"gitlens.views.compareAncestryWithWorking","title":"Compare Ancestry with Working Tree","category":"GitLens"},{"command":"gitlens.views.compareWithHead","title":"Compare with HEAD","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compareWithRemote","title":"Compare with Remote","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-remote.svg","light":"images/light/icon-compare-ref-remote.svg"}},{"command":"gitlens.views.compareWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareFileWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectFileForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareWithWorking","title":"Compare with Working Tree","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.views.contributor.addCoauthoredBy","title":"Add as Co-author","category":"GitLens"},{"command":"gitlens.views.contributor.copyToClipboard","title":"Copy to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-clipboard.svg","light":"images/light/icon-clipboard.svg"}},{"command":"gitlens.views.terminalCheckoutBranch","title":"Checkout Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCreateBranch","title":"Create Branch (via Terminal)...","category":"GitLens"},{"command":"gitlens.views.terminalDeleteBranch","title":"Delete Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalMergeBranch","title":"Merge Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseBranch","title":"Rebase (Interactive) Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseBranchToRemote","title":"Rebase (Interactive) Branch to Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","title":"Squash Branch into Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCheckoutCommit","title":"Checkout Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCherryPickCommit","title":"Cherry Pick Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalPushCommit","title":"Push to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseCommit","title":"Rebase to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalResetCommit","title":"Reset to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRevertCommit","title":"Revert Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRemoveRemote","title":"Remove Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCreateTag","title":"Create Tag (via Terminal)...","category":"GitLens"},{"command":"gitlens.views.terminalDeleteTag","title":"Delete Tag (via Terminal)","category":"GitLens"},{"command":"gitlens.views.repositories.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","title":"Enable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","title":"Disable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.fileHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.fileHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","title":"Resume File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","title":"Pause File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.lineHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","title":"Resume Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","title":"Pause Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.compare.selectForCompare","title":"Compare References...","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compare.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.compare.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.compare.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.compare.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.compare.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.compare.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.compare.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.compare.pinComparison","title":"Pin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-pin-tilted.svg","light":"images/light/icon-pin-tilted.svg"}},{"command":"gitlens.views.compare.unpinComparison","title":"Unpin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-pin-filled.svg","light":"images/light/icon-pin-filled.svg"}},{"command":"gitlens.views.compare.swapComparison","title":"Swap Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-swap.svg","light":"images/light/icon-swap.svg"}},{"command":"gitlens.views.search.searchCommits","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.views.search.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.search.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.search.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.search.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.search.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.search.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.search.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.dismissNode","title":"Dismiss","category":"GitLens","icon":{"dark":"images/dark/icon-close-small.svg","light":"images/light/icon-close-small.svg"}},{"command":"gitlens.views.expandNode","title":"Expand","category":"GitLens"},{"command":"gitlens.views.refreshNode","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}}],"menus":{"commandPalette":[{"command":"gitlens.showCompareView","when":"gitlens:enabled"},{"command":"gitlens.showFileHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showLineHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showRepositoriesView","when":"gitlens:enabled"},{"command":"gitlens.showSearchView","when":"gitlens:enabled"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled"},{"command":"gitlens.diffHeadWith","when":"gitlens:enabled"},{"command":"gitlens.diffWorkingWith","when":"gitlens:enabled"},{"command":"gitlens.diffWithRef","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithNext","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.externalDiff","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled"},{"command":"gitlens.toggleFileBlame","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleFileRecentChanges","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleLineBlame","when":"gitlens:enabled"},{"command":"gitlens.toggleCodeLens","when":"gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.showCommitInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickCommitDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickCommitFileDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.copyMessageToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.copyShaToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openBranchesInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openBranchInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openCommitInRemote","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileInRemote","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openFileRevisionFrom","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openRepoInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.stashApply","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashDelete","when":"false"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashSaveFiles","when":"false"},{"command":"gitlens.resetSuppressedWarnings","when":"gitlens:enabled"},{"command":"gitlens.views.exploreRepoRevision","when":"false"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.views.checkout","when":"false"},{"command":"gitlens.views.fetch","when":"false"},{"command":"gitlens.views.pull","when":"false"},{"command":"gitlens.views.push","when":"false"},{"command":"gitlens.views.pushWithForce","when":"false"},{"command":"gitlens.views.openInTerminal","when":"false"},{"command":"gitlens.views.setAsDefault","when":"false"},{"command":"gitlens.views.unsetAsDefault","when":"false"},{"command":"gitlens.views.stageDirectory","when":"false"},{"command":"gitlens.views.stageFile","when":"false"},{"command":"gitlens.views.unstageDirectory","when":"false"},{"command":"gitlens.views.unstageFile","when":"false"},{"command":"gitlens.views.star","when":"false"},{"command":"gitlens.views.unstar","when":"false"},{"command":"gitlens.views.openChanges","when":"false"},{"command":"gitlens.views.openDirectoryDiff","when":"false"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.views.openChangesWithWorking","when":"false"},{"command":"gitlens.views.openFile","when":"false"},{"command":"gitlens.views.openFileRevision","when":"false"},{"command":"gitlens.views.openFileRevisionInRemote","when":"false"},{"command":"gitlens.views.openChangedFiles","when":"false"},{"command":"gitlens.views.openChangedFileChanges","when":"false"},{"command":"gitlens.views.openChangedFileChangesWithWorking","when":"false"},{"command":"gitlens.views.openChangedFileRevisions","when":"false"},{"command":"gitlens.views.applyChanges","when":"false"},{"command":"gitlens.views.closeRepository","when":"false"},{"command":"gitlens.views.compareAncestryWithWorking","when":"false"},{"command":"gitlens.views.compareWithHead","when":"false"},{"command":"gitlens.views.compareWithRemote","when":"false"},{"command":"gitlens.views.compareWithSelected","when":"false"},{"command":"gitlens.views.selectForCompare","when":"false"},{"command":"gitlens.views.compareFileWithSelected","when":"false"},{"command":"gitlens.views.selectFileForCompare","when":"false"},{"command":"gitlens.views.compareWithWorking","when":"false"},{"command":"gitlens.views.contributor.addCoauthoredBy","when":"false"},{"command":"gitlens.views.contributor.copyToClipboard","when":"false"},{"command":"gitlens.views.terminalCheckoutBranch","when":"false"},{"command":"gitlens.views.terminalCreateBranch","when":"false"},{"command":"gitlens.views.terminalDeleteBranch","when":"false"},{"command":"gitlens.views.terminalMergeBranch","when":"false"},{"command":"gitlens.views.terminalRebaseBranch","when":"false"},{"command":"gitlens.views.terminalRebaseBranchToRemote","when":"false"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","when":"false"},{"command":"gitlens.views.terminalCheckoutCommit","when":"false"},{"command":"gitlens.views.terminalCherryPickCommit","when":"false"},{"command":"gitlens.views.terminalPushCommit","when":"false"},{"command":"gitlens.views.terminalRebaseCommit","when":"false"},{"command":"gitlens.views.terminalResetCommit","when":"false"},{"command":"gitlens.views.terminalRevertCommit","when":"false"},{"command":"gitlens.views.terminalRemoveRemote","when":"false"},{"command":"gitlens.views.terminalCreateTag","when":"false"},{"command":"gitlens.views.terminalDeleteTag","when":"false"},{"command":"gitlens.views.repositories.refresh","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"false"},{"command":"gitlens.views.fileHistory.refresh","when":"false"},{"command":"gitlens.views.fileHistory.changeBase","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.refresh","when":"false"},{"command":"gitlens.views.lineHistory.changeBase","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.compare.selectForCompare","when":"gitlens:enabled && config.gitlens.views.compare.enabled"},{"command":"gitlens.views.compare.clear","when":"false"},{"command":"gitlens.views.compare.refresh","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.compare.pinComparison","when":"false"},{"command":"gitlens.views.compare.unpinComparison","when":"false"},{"command":"gitlens.views.compare.swapComparison","when":"false"},{"command":"gitlens.views.search.searchCommits","when":"false"},{"command":"gitlens.views.search.clear","when":"false"},{"command":"gitlens.views.search.refresh","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.dismissNode","when":"false"},{"command":"gitlens.views.expandNode","when":"false"},{"command":"gitlens.views.refreshNode","when":"false"}],"editor/context":[{"command":"gitlens.diffLineWithPrevious","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@1"},{"command":"gitlens.openCommitInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@2"},{"command":"gitlens.showQuickCommitFileDetails","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.details","group":"1_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"3_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"3_gitlens@2"},{"command":"gitlens.toggleFileBlame","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame","group":"3_gitlens@3"},{"command":"gitlens.copyShaToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@3"}],"editor/title":[{"command":"gitlens.diffWithWorking","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.diffWithWorkingInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"!gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git && isInDiffEditor","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme == git && !isInDiffEditor","group":"navigation@0"},{"command":"gitlens.diffWithPrevious","alt":"gitlens.diffWithRevision","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.diffWithPreviousInDiff","alt":"gitlens.diffWithRevision","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git && config.gitlens.menus.editorGroup.compare","group":"navigation@98"},{"command":"gitlens.diffWithNext","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && config.gitlens.menus.editorGroup.compare","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && config.gitlens.menus.editorGroup.compare","group":"navigation@99"},{"command":"gitlens.toggleFileBlame","alt":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computing && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed && config.gitlens.menus.editorGroup.blame","group":"navigation@100"}],"editor/title/context":[{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens","group":"1_co_gitlens@1"},{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.remote","group":"1_co_gitlens@2"},{"command":"gitlens.diffWithPrevious","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@1"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@2"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.clipboard","group":"1_cutcopypaste@100"}],"explorer/context":[{"command":"gitlens.openFileInRemote","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote","group":"navigation@100"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@1"},{"command":"gitlens.diffWithRevision","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@2"},{"command":"gitlens.showQuickFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens_1@1"},{"command":"gitlens.showFileHistoryInView","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens_1@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.clipboard","group":"5_cutcopypaste@100"}],"scm/resourceGroup/context":[{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stashInline","group":"inline@-1"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stash","group":"1_modification@100"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@2"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@3"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@4"}],"scm/resourceState/context":[{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.remote","group":"navigation"},{"command":"gitlens.externalDiff","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"navigation"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@1"},{"command":"gitlens.diffWithRef","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@2"},{"command":"gitlens.stashSaveFiles","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmItem.stash","group":"1_modification@-1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.clipboard","group":"9_gitlens@1"}],"view/title":[{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@10"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@11"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@12"},{"command":"gitlens.views.repositories.refresh","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@99"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.changeBase","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@11"},{"command":"gitlens.views.fileHistory.refresh","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@99"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.changeBase","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@11"},{"command":"gitlens.views.lineHistory.refresh","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@99"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.compare.selectForCompare","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@10"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.compare:/ && !gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.compare:/ && gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.clear","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@98"},{"command":"gitlens.views.compare.refresh","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@99"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.search.searchCommits","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@10"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.search:/ && !gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.search:/ && gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.clear","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@98"},{"command":"gitlens.views.search.refresh","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@99"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.supportGitLens","when":"view =~ /^gitlens\\.views\\..*:/ && config.gitlens.advanced.messages.suppressSupportGitLensNotification != true && gitlens:views:supportGitLens:hide != true","group":"navigation@1"},{"command":"gitlens.showSettingsPage","when":"view =~ /^gitlens\\.views\\..*:/","group":"9_gitlens"}],"view/item/context":[{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b.*?\\+remotes\\b.*?/","group":"inline@98"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b.*?\\+remotes\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\+starred\\b.*?)/","group":"inline@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b.*?\\+starred\\b.*?/","group":"inline@2"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"inline@10"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+tracking\\b.*?/","group":"inline@96"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\+current\\b.*?)|commit\\b|stash\\b|tag\\b)/","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:branch\\b.*?\\+current\\b.*?/","group":"inline@97"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+(tracking|remote)\\b.*?/","group":"inline@98"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"1_gitlens@1"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+(tracking|remote)\\b.*?/","group":"2_gitlens@1"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+tracking\\b.*?/","group":"7_gitlens@1"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\+current\\b.*?)|commit\\b|stash\\b|tag\\b)/","group":"7_gitlens@2"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens@3"},{"command":"gitlens.views.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"7_gitlens@4"},{"command":"gitlens.views.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:views:canCompare","group":"7_gitlens_@1"},{"command":"gitlens.views.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_@2"},{"command":"gitlens.views.compareFileWithSelected","when":"viewItem =~ /gitlens:file:\\b/ && gitlens:views:canCompare:file","group":"7_gitlens_@1"},{"command":"gitlens.views.selectFileForCompare","when":"viewItem =~ /gitlens:file:\\b/","group":"7_gitlens_@2"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/","group":"7_gitlens_more@2"},{"command":"gitlens.views.terminalCheckoutBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)//","group":"8_gitlens@1"},{"command":"gitlens.views.terminalRebaseBranchToRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b.*?\\+current\\b.*?\\+tracking\\b.*?/","group":"8_gitlens@1"},{"command":"gitlens.views.terminalMergeBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@2"},{"command":"gitlens.views.terminalRebaseBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@3"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@4"},{"command":"gitlens.views.terminalCreateBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:(branch|commit|tag)\\b/","group":"8_gitlens@5"},{"command":"gitlens.views.terminalDeleteBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@6"},{"command":"gitlens.views.terminalCreateTag","when":"!gitlens:readonly && viewItem =~ /gitlens:(branch|commit)\\b/","group":"8_gitlens@7"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\+starred\\b.*?)/","group":"8_gitlens_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b.*?\\+starred\\b.*?/","group":"8_gitlens_@1"},{"command":"gitlens.views.contributor.copyToClipboard","when":"viewItem =~ /gitlens:contributor\\b/","group":"inline@98"},{"command":"gitlens.views.contributor.copyToClipboard","when":"viewItem =~ /gitlens:contributor\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.contributor.addCoauthoredBy","when":"viewItem =~ /gitlens:contributor\\b/","group":"2_gitlens@1"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"inline@98"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.views.openChangedFileChanges","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@1"},{"command":"gitlens.views.openChangedFileChangesWithWorking","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.openChangedFiles","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@1"},{"command":"gitlens.views.openChangedFileRevisions","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(file:)?commit\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(file:)?commit\\b/","group":"5_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash|file:commit)\\b/","group":"5_gitlens@2"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens_1@2"},{"command":"gitlens.views.terminalCherryPickCommit","when":"!gitlens:readonly && viewItem == gitlens:commit","group":"8_gitlens@1"},{"command":"gitlens.views.terminalPushCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b.*?\\+current\\b.*?/","group":"8_gitlens@2"},{"command":"gitlens.views.terminalRevertCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b.*?\\+current\\b.*?/","group":"8_gitlens@3"},{"command":"gitlens.views.terminalCheckoutCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@4"},{"command":"gitlens.views.terminalRebaseCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@5"},{"command":"gitlens.views.terminalResetCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@6"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/","group":"inline@1"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+unstaged\\b.*?/","group":"inline@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+staged\\b.*?/","group":"inline@1"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+unstaged\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+staged\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.stashSaveFiles","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+(un)?staged\\b.*?/","group":"1_gitlens@2"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@1"},{"command":"gitlens.externalDiff","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@3"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/","group":"3_gitlens@1"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b/","group":"3_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(file\\b(?!.*?\\+(un)?staged\\b.*?)|history:(file|line))\\b/ && gitlens:hasRemotes","group":"inline@99","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes","group":"4_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"5_gitlens@3"},{"command":"gitlens.views.openFileRevisionInRemote","when":"viewItem == gitlens:file:commit && gitlens:hasRemotes","group":"4_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"3_gitlens@2"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file:(commit|results)\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.views.checkout","when":"viewItem =~ /gitlens:file:(commit|results)\\b/","group":"5_gitlens_1@2"},{"command":"gitlens.views.applyChanges","when":"!gitlens:readonly && viewItem == gitlens:file:stash","group":"1_gitlens@1"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem == gitlens:file:stash","group":"1_gitlens@2"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"5_gitlens_2@1"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"5_gitlens_2@2"},{"command":"gitlens.showQuickFileHistory","when":"viewItem =~ /gitlens:file\\b/","group":"8_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"viewItem =~ /gitlens:file\\b/","group":"8_gitlens@2"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"inline@97"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"inline@98"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"1_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"2_gitlens@1"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.terminalRemoveRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"8_gitlens@1"},{"command":"gitlens.views.setAsDefault","when":"viewItem =~ /gitlens:remote\\b(?!.*?\\+default\\b.*?)/","group":"8_gitlens_@1"},{"command":"gitlens.views.unsetAsDefault","when":"viewItem =~ /gitlens:remote\\b.*?\\+default\\b.*?/","group":"8_gitlens_@1"},{"command":"gitlens.views.exploreRepoRevision","when":"viewItem =~ /gitlens:(branch|commit|file:(commit|results)|stash|tag)\\b/","group":"7_gitlens_more@1"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"inline@10"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\+starred\\b.*?)/","group":"inline@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b.*?\\+starred\\b.*?/","group":"inline@2"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@97","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@98"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@99"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repository\\b/","group":"2_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:repository\\b/ && gitlens:hasRemotes","group":"2_gitlens@2"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"3_gitlens@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"4_gitlens@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"4_gitlens@2"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\+starred\\b.*?)/","group":"8_gitlens@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b.*?\\+starred\\b.*?/","group":"8_gitlens@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repository\\b/","group":"8_gitlens@2"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"inline@1"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"1_gitlens@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"inline@1","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens@2"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\+pinned\\b.*?)|search)\\b(?!:(commits|files))/","group":"inline@99"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\+pinned\\b.*?)/","group":"inline@1"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b.*?\\+pinned\\b.*?/","group":"inline@1"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"inline@2"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:compare:results\\b/","group":"inline@3"},{"command":"gitlens.views.openDirectoryDiff","when":"viewItem =~ /gitlens:compare:results\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\+pinned\\b.*?)/","group":"2_gitlens@1"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b.*?\\+pinned\\b.*?/","group":"2_gitlens@1"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"inline@1"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"2_gitlens@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"inline@98"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"inline@99"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"1_gitlens@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"1_gitlens@2"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@98"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@99"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens@1"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens@2"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"inline@10"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.terminalDeleteTag","when":"!gitlens:readonly && viewItem == gitlens:tag","group":"8_gitlens"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"inline@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"inline@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"1_gitlens@2"},{"command":"gitlens.views.expandNode","when":"viewItem =~ /gitlens:(compare|folder|results|search|status:files)\\b/","group":"8_gitlens@1"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\+pinned\\b.*?)|search)\\b(?!:(commits|files))/","group":"8_gitlens@2"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:(?!file\\b)/","group":"9_gitlens@1"}]},"keybindings":[{"command":"gitlens.key.left","key":"alt+left","when":"gitlens:key:left"},{"command":"gitlens.key.right","key":"alt+right","when":"gitlens:key:right"},{"command":"gitlens.key.,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key..","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"alt+-","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"alt+/","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiff","key":"alt+.","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"alt+,","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiff","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","key":"alt+w","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","mac":"cmd+alt+g b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","mac":"cmd+alt+g shift+b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"ctrl+shift+g -","mac":"cmd+alt+g -","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"ctrl+shift+g /","mac":"cmd+alt+g /","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","mac":"cmd+alt+g h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","mac":"cmd+alt+g shift+h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","mac":"cmd+alt+g s","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","mac":"cmd+alt+g c","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiff","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","mac":"cmd+alt+g shift+,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+.","mac":"cmd+alt+g shift+.","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiff","key":"ctrl+shift+g shift+.","mac":"cmd+alt+g shift+.","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","key":"ctrl+shift+g w","mac":"cmd+alt+g w","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","mac":"ctrl+shift+g","when":"config.gitlens.keymap == chorded && gitlens:enabled"}],"resourceLabelFormatters":[{"scheme":"gitlens","authority":"*","formatting":{"label":"${path} (${authority})","separator":"/"}}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"images/gitlens-activitybar.svg"}]},"views":{"gitlens":[{"id":"gitlens.views.repositories:gitlens","name":"Repositories","when":"config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == gitlens"},{"id":"gitlens.views.fileHistory:gitlens","name":"File History","when":"config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == gitlens"},{"id":"gitlens.views.lineHistory:gitlens","name":"Line History","when":"config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == gitlens"},{"id":"gitlens.views.compare:gitlens","name":"Compare","when":"config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == gitlens"},{"id":"gitlens.views.search:gitlens","name":"Search Commits","when":"config.gitlens.views.search.enabled && config.gitlens.views.search.location == gitlens"}],"explorer":[{"id":"gitlens.views.repositories:explorer","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == explorer"},{"id":"gitlens.views.fileHistory:explorer","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == explorer"},{"id":"gitlens.views.lineHistory:explorer","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == explorer"},{"id":"gitlens.views.compare:explorer","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == explorer"},{"id":"gitlens.views.search:explorer","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == explorer"}],"scm":[{"id":"gitlens.views.repositories:scm","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == scm"},{"id":"gitlens.views.fileHistory:scm","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == scm"},{"id":"gitlens.views.lineHistory:scm","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == scm"},{"id":"gitlens.views.compare:scm","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == scm"},{"id":"gitlens.views.search:scm","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == scm"}]}},"scripts":{"analyze:bundle":"webpack --env.analyzeBundle","analyze:deps":"webpack --env.analyzeDeps","build":"webpack --env.development","bundle":"webpack --env.production","clean":"git clean -Xdf -e !.cache-images -e !node_modules -e !node_modules/**/*","lint":"eslint src/**/*.ts --fix","pack":"vsce package","pretty":"prettier --config .prettierrc --loglevel warn --write \"./**/*.{ts,md,json}\" && npm run lint","pub":"vsce publish","rebuild":"npm run reset && npm run build","reset":"npm run clean && npm install --no-save","watch":"webpack --watch --env.development --info-verbosity verbose","webviews:optimize":"webpack --config-name webviews --env.optimizeImages","webviews:watch":"webpack --watch --config-name webviews --env.development --info-verbosity verbose","update:emoji":"pushd emoji && node ./shortcodeToEmoji.js && popd","postinstall":"node ./node_modules/vscode/bin/install","vscode:prepublish":"npm run reset && npm run bundle"},"dependencies":{"dayjs":"1.8.12","iconv-lite":"0.4.24","lodash-es":"4.17.11","vsls":"0.3.1291"},"devDependencies":{"@types/lodash-es":"4.17.3","@types/node":"10.1.4","@typescript-eslint/eslint-plugin":"1.7.0","@typescript-eslint/parser":"1.7.0","clean-webpack-plugin":"2.0.1","circular-dependency-plugin":"5.0.2","css-loader":"2.1.1","eslint":"5.16.0","eslint-cli":"1.1.1","eslint-config-prettier":"4.1.0","eslint-loader":"2.1.2","eslint-plugin-import":"2.17.2","eslint-plugin-prettiest":"0.0.1","html-webpack-exclude-assets-plugin":"0.0.7","html-webpack-inline-source-plugin":"0.0.10","html-webpack-plugin":"3.2.0","imagemin-webpack-plugin":"2.4.2","mini-css-extract-plugin":"0.6.0","node-sass":"4.11.0","prettier":"1.17.0","prettier-eslint":"8.8.2","sass-loader":"7.1.0","terser-webpack-plugin":"1.2.3","ts-loader":"5.3.3","typescript":"3.4.4","vsce":"1.59.0","vscode":"1.1.33","webpack":"4.30.0","webpack-cli":"3.3.1","webpack-bundle-analyzer":"3.3.2"},"uuid":"4de763bd-505d-4978-9575-2b7696ecf94e","isBuiltin":false,"isUnderDevelopment":false,"id":"eamodio.gitlens","identifier":{"value":"eamodio.gitlens","_lower":"eamodio.gitlens"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/eamodio.gitlens-9.6.3","path":"/home/fluper/.vscode/extensions/eamodio.gitlens-9.6.3","scheme":"file"}},{"name":"vscode-great-icons","displayName":"VSCode Great Icons","description":"A big pack of icons (100+) for your files.","version":"2.1.47","publisher":"emmanuelbeziat","engines":{"vscode":"^1.5.0"},"scripts":{"patch":"vsce publish patch","icons":"imagemin icons/* --out-dir=icons"},"categories":["Other","Themes"],"contributes":{"iconThemes":[{"id":"vscode-great-icons","label":"VSCode Great Icons","path":"./icons.json"}]},"icon":"images/vscode-great-icons_icon.png","galleryBanner":{"color":"#e0e0e0","theme":"light"},"keywords":["icons","theme","icon-theme","customization"],"repository":{"type":"git","url":"git+https://github.com/EmmanuelBeziat/vscode-great-icons.git"},"author":{"email":"contact@emmanuelbeziat.com","name":"Emmanuel Béziat","url":"https://www.emmanuelbeziat.com"},"license":"MIT","bugs":{"url":"https://github.com/EmmanuelBeziat/vscode-great-icons/issues"},"homepage":"https://github.com/EmmanuelBeziat/vscode-great-icons#readme","devDependencies":{"imagemin-cli":"^4.0.0","vsce":"^1.53.2"},"uuid":"829a192d-496c-44ac-87f3-0a84ce36a853","isBuiltin":false,"isUnderDevelopment":false,"id":"emmanuelbeziat.vscode-great-icons","identifier":{"value":"emmanuelbeziat.vscode-great-icons","_lower":"emmanuelbeziat.vscode-great-icons"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/emmanuelbeziat.vscode-great-icons-2.1.47","path":"/home/fluper/.vscode/extensions/emmanuelbeziat.vscode-great-icons-2.1.47","scheme":"file"}},{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"VS Code plugin for prettier/prettier","version":"1.9.0","publisher":"esbenp","author":"Esben Petersen <@esbenp>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.17.0"},"keywords":["multi-root ready"],"categories":["Formatters"],"activationEvents":["*"],"icon":"icon.png","main":"/home/fluper/.vscode/extensions/esbenp.prettier-vscode-1.9.0/out/src/extension","contributes":{"configuration":{"type":"object","title":"Prettier - Code formatter configuration","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"default":["vue"],"description":"A list of languages IDs to disable this extension on","scope":"window"},"prettier.eslintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-eslint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from eslint rules.","scope":"resource"},"prettier.tslintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-tslint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from tslint rules.","scope":"resource"},"prettier.stylelintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-stylelint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from stylelint rules.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"description":"Require a 'prettierconfig' to format","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","description":"Path to a .prettierignore or similar file","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"description":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"description":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"description":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"none","description":"Controls the printing of trailing commas wherever possible.\n Valid options:\n    'none' - No trailing commas\n    'es5' - Trailing commas where valid in ES5 (objects, arrays, etc)\n    'all' - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"description":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"description":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.parser":{"type":"string","enum":["babylon","flow"],"default":"babylon","description":"Override the parser. You shouldn't have to change this setting.","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"description":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"description":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","description":"(Markdown) wrap prose over multiple lines"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"avoid","description":"Include parentheses around a sole arrow function parameter","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"description":"Use single quotes instead of double quotes in JSX"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","description":"Specify the global whitespace sensitivity for HTML files.\n Valid options: \n'css' - Respect the default value of CSS display property. \n'strict' - Whitespaces are considered sensitive. \n'ignore' - Whitespaces are considered insensitive."},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"auto","description":"Specify the end of line used by prettier"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","description":"Change when properties in objects are quoted"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc --watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"cd testEslint && npm i && cd ../testTslint && npm i && cd .. && cross-env CODE_TESTS_WORKSPACE=testWorkspace.code-workspace node ./node_modules/vscode/bin/test","version":"node ./scripts/version.js && git add CHANGELOG.md"},"devDependencies":{"@types/mocha":"^5.2.1","@types/node":"^8.10.39","@types/resolve":"0.0.8","cross-env":"^5.1.6","mocha":"^5.2.0","vscode":"^1.1.28"},"dependencies":{"ignore":"^3.3.8","prettier":"1.17.0","prettier-eslint":"^8.8.2","prettier-stylelint":"^0.4.2","prettier-tslint":"^0.4.2","read-pkg-up":"^4.0.0","resolve":"^1.10.0","typescript":"^2.9.2"},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isBuiltin":false,"isUnderDevelopment":false,"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/esbenp.prettier-vscode-1.9.0","path":"/home/fluper/.vscode/extensions/esbenp.prettier-vscode-1.9.0","scheme":"file"}},{"name":"beautify","displayName":"Beautify","description":"Beautify code in place for VS Code","version":"1.4.11","publisher":"HookyQR","engines":{"vscode":"^1.22.0"},"categories":["Other","Programming Languages","Formatters"],"activationEvents":["*"],"icon":"icon.png","galleryBanner":{"color":"#e8e030","theme":"light"},"license":"MIT","main":"/home/fluper/.vscode/extensions/hookyqr.beautify-1.4.11/extension","contributes":{"languages":[{"id":"json","aliases":["JSON"],"filenames":[".jsbeautifyrc",".jshintrc"]}],"jsonValidation":[{"fileMatch":".jsbeautifyrc","url":"./schema/beautifyrc.json"}],"commands":[{"command":"HookyQR.beautify","title":"Beautify selection"},{"command":"HookyQR.beautifyFile","title":"Beautify file"}],"configuration":{"type":"object","title":"Beautify config","properties":{"beautify.ignore":{"type":["string","array"],"items":{"type":"string"},"default":[],"description":"List of paths to ignore when using VS Code format command, including format on save. Uses glob pattern matching.","scope":"resource"},"beautify.config":{"type":["string","object","null"],"default":null,"description":"A path to a file, or an object containing the configuration options for js-beautify. If the .jsbeautifyrc file exists in project root, it overrides this configuration."},"beautify.language":{"type":"object","description":"Link file types to the beautifier type","default":{"js":{"type":["javascript","json","jsonc"],"filename":[".jshintrc",".jsbeautifyrc"]},"css":["css","less","scss"],"html":["htm","html"]},"properties":{"js":{"type":["object","array","null"],"items":{"type":"string"},"description":"Array of language types, or an object containing types, extensions and filenames to associate","properties":{"type":{"type":"array","items":{"type":"string"},"description":"VS Code language name"},"ext":{"type":"array","items":{"type":"string"},"description":"File extensions (without the leading dot)"},"filename":{"type":"array","items":{"type":"string"},"description":"Full filenames (eg: '.jsbeautifyrc')"}}},"css":{"type":["object","array","null"],"items":{"type":"string"},"description":"Array of language types, or an object containing types, extensions and filenames to associate","properties":{"type":{"type":"array","items":{"type":"string"},"description":"VS Code language name"},"ext":{"type":"array","items":{"type":"string"},"description":"File extensions (without the leading dot)"},"filename":{"type":"array","items":{"type":"string"},"description":"Full filenames (eg: '.jsbeautifyrc')"}}},"html":{"type":["object","array","null"],"items":{"type":"string"},"description":"Array of language types, or an object containing types, extensions and filenames to associate","properties":{"type":{"type":"array","items":{"type":"string"},"description":"VS Code language name"},"ext":{"type":"array","items":{"type":"string"},"description":"File extensions (without the leading dot)"},"filename":{"type":"array","items":{"type":"string"},"description":"Full filenames (eg: '.jsbeautifyrc')"}}}}}}}},"dependencies":{"editorconfig":"0.15.0","js-beautify":"^1.9.0","minimatch":"^3.0.4"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^8.10.36","expect.js":"^0.3.1","mocha":"^5.2.0","typescript":"^2.6.1","vscode":"~1.1.18"},"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"repository":{"type":"git","url":"https://github.com/HookyQR/VSCodeBeautify"},"bugs":{"url":"https://github.com/HookyQR/VSCodeBeautify/issues"},"uuid":"697255a9-3f36-44c8-b084-d3b91edfb23a","isBuiltin":false,"isUnderDevelopment":false,"id":"HookyQR.beautify","identifier":{"value":"HookyQR.beautify","_lower":"hookyqr.beautify"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/hookyqr.beautify-1.4.11","path":"/home/fluper/.vscode/extensions/hookyqr.beautify-1.4.11","scheme":"file"}},{"name":"vscode-theme-github-light","displayName":"Github Light Theme","description":"Try this theme if others don't meet your needs.","version":"5.1.7","publisher":"Hyzeta","license":"MPL-2.0","bugs":{"url":"https://github.com/Hyzeta/vscode-theme-github-light/issues"},"repository":{"type":"git","url":"https://github.com/Hyzeta/vscode-theme-github-light"},"icon":"icon.png","engines":{"vscode":"^1.24.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Github Light Theme","uiTheme":"vs","path":"./themes/Github-Light-Theme-color-theme.json"},{"label":"Github Light Theme - Gray","uiTheme":"vs","path":"./themes/Github-Light-Theme-Gray-color-theme.json"}]},"uuid":"b84ed643-ec7d-49cc-a514-3ce104ed777f","isBuiltin":false,"isUnderDevelopment":false,"id":"Hyzeta.vscode-theme-github-light","identifier":{"value":"Hyzeta.vscode-theme-github-light","_lower":"hyzeta.vscode-theme-github-light"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/hyzeta.vscode-theme-github-light-5.1.7","path":"/home/fluper/.vscode/extensions/hyzeta.vscode-theme-github-light-5.1.7","scheme":"file"}},{"name":"vscode-git-add-and-commit","version":"2.0.4","displayName":"Git Automator","description":"Automate your commit messages & your Git workflow.","main":"/home/fluper/.vscode/extensions/ivangabriele.vscode-git-add-and-commit-2.0.4/out/extension","license":"MIT","engines":{"vscode":"^1.28.2"},"activationEvents":["onCommand:extension.vscode-git-automator.addAndCommitAllFiles","onCommand:extension.vscode-git-automator.addAndCommitCurrentFile","onCommand:extension.vscode-git-automator.pushLocalCommits"],"contributes":{"commands":[{"command":"extension.vscode-git-automator.addAndCommitAllFiles","title":"Add & Commit All Files"},{"command":"extension.vscode-git-automator.addAndCommitCurrentFile","title":"Add & Commit Current File"},{"command":"extension.vscode-git-automator.pushLocalCommits","title":"Push Local Commits"}],"keybindings":[{"command":"extension.vscode-git-automator.addAndCommitAllFiles","key":"ctrl+shift+a","mac":"cmd+shift+a"},{"command":"extension.vscode-git-automator.addAndCommitCurrentFile","key":"ctrl+shift+z","mac":"cmd+shift+z"},{"command":"extension.vscode-git-automator.pushLocalCommits","key":"ctrl+shift+x","mac":"cmd+shift+x"}],"configuration":{"type":"object","title":"Git Add & Commit configuration","properties":{"gaac.disableOptionalMessages":{"type":"boolean","default":true,"description":"Show 'optional' warning and info messages in the status bar instead of the top modals."},"gaac.forceLowerCase":{"type":"boolean","default":false,"description":"Force all character in the prefilled commit message to be in lower case. Only works when 'gaac.withFileWorkspacePath' is TRUE. Output: 'README: ' => 'readme: '."},"gaac.ignoreFileExtension":{"type":"boolean","default":true,"description":"Ignore the file extension in the commit message. Output: 'res/icon.png: ' => 'res/icon: '."},"gaac.replacePatternWith":{"type":"array","default":[{"pattern":"/^.editorconfig/","with":"editorconfig"},{"pattern":"/^.gitignore/","with":"git"},{"pattern":"/^.travis/","with":"travis"},{"pattern":"/^.vscodeignore/","with":"vscode"},{"pattern":"/^CHANGELOG[^:]*/","with":"changelog"},{"pattern":"/^Godeps[^:]*/","with":"godep"},{"pattern":"/^LICENSE[^:]*/","with":"license"},{"pattern":"/^Makefile[^:]*/i","with":"makefile"},{"pattern":"/^(npm-shrinkwrap|.npmignore|package(-lock)?)[^:]*/","with":"npm"},{"pattern":"/^webpack[^:]*/","with":"webpack"},{"pattern":"/^README[^:]*/","with":"readme"},{"pattern":"/^src//","with":""}],"description":"Replace the commit message via a pattern (the pattern can be a string or a regex string). These replacements are executed after everything else, BUT before your own edit (in the prompt field). Example: [{ \"pattern\": \"/^package[^\\.]*\\.jso?n?/\", \"with\": \"npm\" }] will replace the prefilled commit message like: 'package-lock.json: ' => 'npm: '.","items":{"type":"object","properties":{"action":{"type":"string"},"pattern":{"type":"string","minLength":1},"state":{"enum":["ADDED","DELETED","MODIFIED","RENAMED"]}}}},"gaac.withFileWorkspacePath":{"type":"boolean","default":true,"description":"Prefill the commit message with the workspace relative file path, followed by ': '."},"gaac.withGuessedAction":{"type":"boolean","default":true,"description":"Try to guess the action when it's obvious and add it to the prefilled commit message."},"gaac.withGuessedCustomActions":{"type":"array","default":[{"action":"ignore","pattern":"/^.(gitignore|npmignore|vscodeignore)/","state":"MODIFIED"},{"action":"update","pattern":"/^CHANGELOG/","state":"MODIFIED"},{"action":"update","pattern":"/^LICENSE/","state":"MODIFIED"},{"action":"update","pattern":"/^README/","state":"MODIFIED"}],"description":"Add a custom action for any prefilled commit matching a pattern and Git state. The `state` can be any one of: 'ADDED', 'DELETED', 'MODIFIED', 'RENAMED'.","items":{"type":"object","properties":{"action":{"type":"string"},"pattern":{"type":"string","minLength":1},"state":{"enum":["ADDED","DELETED","MODIFIED","RENAMED"]}}}}}}},"scripts":{"compile":"tsc -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test","preversion":"npm run compile","postversion":"git push origin HEAD && git push --tags","vscode:prepublish":"npm run compile","watch":"tsc -watch -p ./"},"dependencies":{"await-to-js":"^2.0.1","rorre":"^1.0.0-beta.1"},"devDependencies":{"@types/fs-extra":"^5.0.4","@types/mocha":"^5.2.5","@types/node":"^10.12.3","fs-extra":"^7.0.1","tslint":"^5.11.0","typescript":"^3.1.6","vscode":"^1.1.21"},"author":{"name":"Ivan Gabriele","email":"ivan.gabriele@gmail.com","url":"https://www.ivangabriele.com"},"publisher":"ivangabriele","icon":"res/icon.png","categories":["Other","SCM Providers"],"keywords":["addon","extension","git","shortcut","vscode"],"repository":{"type":"git","url":"git+https://github.com/ivangabriele/vscode-git-automator.git"},"bugs":{"url":"https://github.com/ivangabriele/vscode-git-automator/issues"},"homepage":"https://github.com/ivangabriele/vscode-git-automator#readme","uuid":"117a5df4-a749-4500-a6d1-ecdd3ff732d0","isBuiltin":false,"isUnderDevelopment":false,"id":"ivangabriele.vscode-git-add-and-commit","identifier":{"value":"ivangabriele.vscode-git-add-and-commit","_lower":"ivangabriele.vscode-git-add-and-commit"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/ivangabriele.vscode-git-add-and-commit-2.0.4","path":"/home/fluper/.vscode/extensions/ivangabriele.vscode-git-add-and-commit-2.0.4","scheme":"file"}},{"name":"atom-keybindings","displayName":"Atom Keymap","description":"Popular Atom keybindings for Visual Studio Code","version":"3.0.6","publisher":"ms-vscode","engines":{"vscode":"^1.6.0"},"categories":["Keymaps"],"keywords":["keybindings","keymap"],"preview":true,"icon":"atom-keyboard-padded.png","activationEvents":["*"],"main":"/home/fluper/.vscode/extensions/ms-vscode.atom-keybindings-3.0.6/extension","contributes":{"keybindings":[{"mac":"a","win":"a","linux":"a","key":"a","when":"filesExplorerFocus && !inputFocus","command":"explorer.newFile"},{"mac":"shift+a","win":"shift+a","linux":"shift+a","key":"shift+a","when":"filesExplorerFocus && !inputFocus","command":"explorer.newFolder"},{"mac":"cmd+1","win":"ctrl+1","linux":"ctrl+1","key":"ctrl+1","when":"filesExplorerFocus && !inputFocus","command":"explorer.openToSide"},{"mac":"backspace","win":"backspace","linux":"backspace","key":"backspace","when":"filesExplorerFocus && !inputFocus","command":"moveFileToTrash"},{"mac":"cmd+c","win":"ctrl+c","linux":"ctrl+c","key":"ctrl+c","when":"filesExplorerFocus && !inputFocus","command":"filesExplorer.copy"},{"mac":"h","win":"h","linux":"h","key":"h","when":"filesExplorerFocus && !inputFocus","command":"list.collapse"},{"mac":"l","win":"l","linux":"l","key":"l","when":"filesExplorerFocus && !inputFocus","command":"list.expand"},{"mac":"j","win":"j","linux":"j","key":"j","when":"filesExplorerFocus && !inputFocus","command":"list.focusDown"},{"mac":"k","win":"k","linux":"k","key":"k","when":"filesExplorerFocus && !inputFocus","command":"list.focusUp"},{"mac":"cmd+shift+ctrl+f","win":"shift+f11","linux":"shift+f11","key":"shift+f11","command":"workbench.action.toggleZenMode"},{"mac":"ctrl+cmd+down","win":"ctrl+down","linux":"ctrl+down","key":"ctrl+down","command":"editor.action.moveLinesDownAction","when":"editorTextFocus"},{"mac":"ctrl+cmd+up","win":"ctrl+up","linux":"ctrl+up","key":"ctrl+up","command":"editor.action.moveLinesUpAction","when":"editorTextFocus"},{"mac":"cmd+shift+d","win":"ctrl+shift+d","linux":"ctrl+shift+d","key":"ctrl+shift+d","command":"editor.action.copyLinesDownAction","when":"editorTextFocus"},{"mac":"ctrl+shift+k","win":"ctrl+shift+k","linux":"ctrl+shift+k","key":"ctrl+shift+k","command":"editor.action.deleteLines","when":"editorTextFocus"},{"mac":"cmd+k cmd+b","win":"ctrl+k ctrl+b","linux":"ctrl+k ctrl+b","key":"ctrl+k ctrl+b","command":"workbench.action.toggleSidebarVisibility"},{"mac":"cmd+\\","win":"ctrl+\\","linux":"ctrl+\\","key":"ctrl+\\","command":"workbench.action.toggleSidebarVisibility"},{"mac":"cmd+k left","win":"ctrl+k left","linux":"ctrl+k left","key":"ctrl+k left","command":"workbench.action.splitEditor"},{"mac":"cmd+t","win":"ctrl+t","key":"ctrl+p","command":"workbench.action.quickOpen"},{"mac":"ctrl-alt-b","key":"shift-alt-f","command":"editor.action.formatDocument"},{"mac":"cmd+b","win":"ctrl+b","linux":"ctrl+b","key":"ctrl+b","command":"workbench.action.quickOpenNavigateNext","when":"inQuickOpen"},{"mac":"ctrl+shift+l","win":"ctrl+shift+l","linux":"ctrl+shift+l","key":"ctrl+shift+l","command":"workbench.action.editor.changeLanguageMode"},{"mac":"ctrl+shift+m","win":"ctrl+shift+m","linux":"ctrl+shift+m","key":"ctrl+shift+m","command":"markdown.showPreviewToSide"},{"mac":"ctrl+alt+cmd+l","win":"alt+ctrl+r","linux":"alt+ctrl+r","key":"alt+ctrl+r","command":"workbench.action.reloadWindow"},{"mac":"ctrl+shift+o","key":"none","command":"editor.action.openLink"},{"mac":"alt+cmd+i","win":"ctrl+alt+i","linux":"ctrl+alt+i","key":"ctrl+alt+i","command":"workbench.action.toggleDevTools"},{"mac":"alt+shift+s","win":"alt+shift+s","linux":"alt+shift+s","key":"alt+shift+s","command":"editor.action.showSnippets"},{"win":"ctrl+shift+o","linux":"ctrl+shift+o","key":"ctrl+shift+o","command":"workbench.action.files.openFolder"},{"mac":"cmd+shift+o","key":"none","command":"workbench.action.files.openFileFolder"},{"mac":"ctrl+m","win":"ctrl+m","linux":"ctrl+m","key":"ctrl+m","command":"editor.action.jumpToBracket","when":"editorTextFocus"},{"mac":"cmd+l","win":"ctrl+l","linux":"ctrl+l","key":"ctrl+l","command":"expandLineSelection","when":"editorTextFocus"},{"mac":"ctrl+shift+up","linux":"shift+alt+up","key":"shift+alt+up","command":"cursorColumnSelectUp","when":"editorTextFocus"},{"mac":"ctrl+shift+down","linux":"shift+alt+down","key":"shift+alt+down","command":"cursorColumnSelectDown","when":"editorTextFocus"},{"mac":"ctrl+alt+b","win":"alt+shift+f","linux":"ctrl+shift+i","key":"ctrl+shift+i","command":"editor.action.format","when":"editorHasFormattingProvider && editorTextFocus && !editorReadonly"},{"mac":"ctrl+alt+t","win":"ctrl+`","linux":"ctrl+`","key":"ctrl+`","command":"workbench.action.terminal.toggleTerminal"},{"mac":"ctrl+cmd+f","win":"f11","linux":"f11","key":"f11","command":"workbench.action.toggleFullScreen"},{"mac":"cmd+r","win":"ctrl+r","linux":"ctrl+r","key":"ctrl+r","command":"workbench.action.gotoSymbol"},{"mac":"alt+cmd+[","win":"alt+ctrl+[","linux":"alt+ctrl+[","key":"alt+ctrl+[","command":"editor.fold","when":"editorTextFocus"},{"mac":"alt+cmd+]","win":"alt+ctrl+]","linux":"alt+ctrl+]","key":"alt+ctrl+]","command":"editor.unfold","when":"editorTextFocus"},{"mac":"alt+cmd+shift+[","win":"alt+ctrl+shift+[","linux":"alt+ctrl+shift+[","key":"alt+ctrl+shift+[","command":"editor.foldAll","when":"editorTextFocus"},{"mac":"alt+cmd+shift+]","win":"alt+ctrl+shift+]","linux":"alt+ctrl+shift+]","key":"alt+ctrl+shift+]","command":"editor.unfoldAll","when":"editorTextFocus"},{"mac":"cmd+shift+7","key":"cmd+k cmd+c","command":"editor.action.commentLine","when":"editorTextFocus"},{"mac":"cmd+=","key":"ctrl+=","command":"workbench.action.zoomIn"},{"mac":"cmd+-","key":"ctrl+-","command":"workbench.action.zoomOut"},{"mac":"cmd+k cmd+1","win":"ctrl+k ctrl+1","linux":"ctrl+k ctrl+1","key":"ctrl+k ctrl+1","command":"editor.foldLevel1","when":"editorTextFocus"},{"mac":"cmd+k cmd+2","win":"ctrl+k ctrl+2","linux":"ctrl+k ctrl+2","key":"ctrl+k ctrl+2","command":"editor.foldLevel2","when":"editorTextFocus"},{"mac":"cmd+k cmd+3","win":"ctrl+k ctrl+3","linux":"ctrl+k ctrl+3","key":"ctrl+k ctrl+3","command":"editor.foldLevel3","when":"editorTextFocus"},{"mac":"cmd+k cmd+4","win":"ctrl+k ctrl+4","linux":"ctrl+k ctrl+4","key":"ctrl+k ctrl+4","command":"editor.foldLevel4","when":"editorTextFocus"},{"mac":"cmd+k cmd+5","win":"ctrl+k ctrl+5","linux":"ctrl+k ctrl+5","key":"ctrl+k ctrl+5","command":"editor.foldLevel5","when":"editorTextFocus"},{"win":"ctrl+pagedown","linux":"ctrl+pagedown","key":"ctrl+pagedown","command":"workbench.action.nextEditor"},{"win":"ctrl+pageup","linux":"ctrl+pageup","key":"ctrl+pageup","command":"workbench.action.previousEditor"},{"mac":"ctrl+cmd+g","win":"alt+f3","linux":"alt+f3","key":"alt+f3","command":"editor.action.selectHighlights","when":"editorFocus"},{"mac":"cmd+shift+l","linux":"alt+shift+l","win":"alt+shift+l","key":"alt+shift+l","command":"editor.action.insertCursorAtEndOfEachLineSelected","when":"editorTextFocus && editorHasSelection"},{"mac":"cmd+-","win":"ctrl+-","linux":"ctrl+-","key":"ctrl+-","command":"workbench.action.zoomOut"},{"mac":"cmd+1","win":"alt+1","linux":"alt+1","key":"alt+1","command":"workbench.action.openEditorAtIndex1"},{"mac":"cmd+2","win":"alt+2","linux":"alt+2","key":"alt+2","command":"workbench.action.openEditorAtIndex2"},{"mac":"cmd+3","win":"alt+3","linux":"alt+3","key":"alt+3","command":"workbench.action.openEditorAtIndex3"},{"mac":"cmd+4","win":"alt+4","linux":"alt+4","key":"alt+4","command":"workbench.action.openEditorAtIndex4"},{"mac":"cmd+5","win":"alt+5","linux":"alt+5","key":"alt+5","command":"workbench.action.openEditorAtIndex5"},{"mac":"cmd+6","win":"alt+6","linux":"alt+6","key":"alt+6","command":"workbench.action.openEditorAtIndex6"},{"mac":"cmd+7","win":"alt+7","linux":"alt+7","key":"alt+7","command":"workbench.action.openEditorAtIndex7"},{"mac":"cmd+8","win":"alt+8","linux":"alt+8","key":"alt+8","command":"workbench.action.openEditorAtIndex8"},{"mac":"cmd+9","win":"alt+9","linux":"alt+9","key":"alt+9","command":"workbench.action.openEditorAtIndex9"},{"mac":"alt+cmd+\\","win":"ctrl+shift+\\","linux":"ctrl+shift+\\","key":"ctrl+shift+\\","command":"workbench.files.action.showActiveFileInExplorer"},{"mac":"ctrl+shift+c","win":"ctrl+shift+c","linux":"ctrl+shift+c","key":"ctrl+shift+c","command":"workbench.action.files.copyPathOfActiveFile","when":"!terminalFocus"},{"mac":"cmd+,","win":"ctrl+,","linux":"ctrl+,","key":"ctrl+,","command":"workbench.action.openGlobalSettings"},{"mac":"cmd+b","win":"ctrl+b","linux":"ctrl+b","key":"ctrl+b","command":"workbench.action.showAllEditors"},{"mac":"cmd+ctrl+shift+f","win":"shift+f11","linux":"shift+f11","key":"shift+f11","command":"workbench.action.toggleZenMode"},{"mac":"cmd+y","win":"ctrl+y","linux":"ctrl+y","key":"ctrl+y","command":"redo"},{"mac":"cmd+j","linux":"ctrl+j","win":"ctrl+j","key":"ctrl+j","command":"editor.action.joinLines"},{"mac":"cmd+p","win":"ctrl+p","linux":"ctrl+p","key":"ctrl+p","command":"workbench.action.quickOpenPreviousEditor"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"}],"configuration":{"type":"object","title":"Atom Keymap configuration","properties":{"atomKeymap.promptV3Features":{"type":["boolean","null"],"default":null,"description":"Status of Atom Keymap version three features added."}}}},"scripts":{"postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"vscode":"^1.0.0","typescript":"^2.0.3"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-atom-keybindings.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-atom-keybindings/issues"},"uuid":"fa57ae0e-d21e-40d8-a0bb-a58b5fd9ead3","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.atom-keybindings","identifier":{"value":"ms-vscode.atom-keybindings","_lower":"ms-vscode.atom-keybindings"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/ms-vscode.atom-keybindings-3.0.6","path":"/home/fluper/.vscode/extensions/ms-vscode.atom-keybindings-3.0.6","scheme":"file"}},{"name":"js-atom-grammar","private":true,"displayName":"JavaScript Atom Grammar","description":"The Atom editor's JavaScript text mate grammar.","license":"SEE LICENSE IN LICENSE.txt","author":"Microsoft Corporation","galleryBanner":{"color":"#5c2d91","theme":"dark"},"icon":"logo.png","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-js-atom-grammar.git"},"publisher":"ms-vscode","version":"0.1.14","engines":{"vscode":"*"},"devDependencies":{"cson-parser":"^1.3.3"},"scripts":{"update-grammar":"node ./build/update-grammar.js atom/language-javascript grammars/javascript.cson ./syntaxes/javascript.json"},"extensionDependencies":["vscode.javascript"],"categories":["Languages"],"keywords":["javascript"],"contributes":{"grammars":[{"language":"javascript","scopeName":"source.js","path":"./syntaxes/javascript.json"}]},"uuid":"54da57eb-3718-44cf-bb67-5e4a03b35ece","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.js-atom-grammar","identifier":{"value":"ms-vscode.js-atom-grammar","_lower":"ms-vscode.js-atom-grammar"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/ms-vscode.js-atom-grammar-0.1.14","path":"/home/fluper/.vscode/extensions/ms-vscode.js-atom-grammar-0.1.14","scheme":"file"}},{"name":"debugger-for-chrome","displayName":"Debugger for Chrome","version":"4.11.3","icon":"images/icon.png","description":"Debug your JavaScript code in the Chrome browser, or any other target that supports the Chrome Debugger protocol.","author":{"name":"Microsoft Corporation"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-chrome-debug"},"publisher":"msjsdiag","bugs":"https://github.com/microsoft/vscode-chrome-debug/issues","engines":{"vscode":"^1.17.0"},"categories":["Debuggers"],"keywords":["multi-root ready"],"license":"SEE LICENSE IN LICENSE.txt","dependencies":{"vscode-chrome-debug-core":"^6.7.45","vscode-debugadapter":"^1.32.1","vscode-nls":"^4.0.0"},"devDependencies":{"@types/mocha":"^2.2.35","@types/mockery":"^1.4.29","@types/node":"^8.0.58","@types/source-map":"^0.1.27","@types/tmp":"0.0.32","concurrently":"^3.1.0","del":"^3.0.0","event-stream":"^3.3.4","glob":"^7.1.1","gulp":"^4.0.0","gulp-sourcemaps":"^2.6.4","gulp-tslint":"^8.1.3","gulp-typescript":"^4.0.1","gulp-util":"^3.0.8","http-server":"^0.10.0","minimist":"^1.2.0","mocha":"^5.2.0","mockery":"^1.7.0","tmp":"0.0.31","ts-loader":"^1.0.0","tslint":"^5.7.0","typemoq":"^2.1.0","typescript":"^2.7.2","vsce":"^1.48.0","vscode":"^1.1.30","vscode-chrome-debug-core-testsupport":"^4.0.0","vscode-debugadapter-testsupport":"^1.33.0","vscode-debugprotocol":"^1.32.0","vscode-nls-dev":"^3.2.3"},"main":"/home/fluper/.vscode/extensions/msjsdiag.debugger-for-chrome-4.11.3/out/src/extension","activationEvents":["onDebugInitialConfigurations","onDebugResolve:chrome","onCommand:extension.chrome-debug.toggleSkippingFile","onCommand:extension.chrome-debug.toggleSmartStep"],"scripts":{"build":"gulp build","watch":"gulp watch","start":"node out/src/chromeDebug.js --server=4712","test":"mocha --exit --timeout 20000 -s 2000 -u tdd --colors \"./out/test/*.test.js\"","intTest":"mocha --exit --timeout 20000 -s 3500 -u tdd --colors --reporter node_modules/vscode-chrome-debug-core-testsupport/out/loggingReporter.js ./out/test/int/*.test.js","lint":"gulp tslint","vscode:prepublish":"gulp verify-no-linked-modules","postinstall":"node ./node_modules/vscode/bin/install","patch":"npm version patch -m '%s'","minor":"npm version minor -m '%s'","major":"npm version major -m '%s'","package":"gulp package"},"contributes":{"breakpoints":[{"language":"javascript"},{"language":"typescriptreact"},{"language":"javascriptreact"},{"language":"fsharp"}],"debuggers":[{"type":"chrome","label":"Chrome","program":"./out/src/chromeDebug.js","runtime":"node","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","languages":["javascript","typescript","javascriptreact","typescriptreact"],"configurationSnippets":[{"label":"Chrome: Launch","description":"Launch Chrome to debug a URL","body":{"type":"chrome","request":"launch","name":"Launch Chrome","url":"http://localhost:8080","webRoot":"^\"${2:\\${workspaceFolder\\}}\""}},{"label":"Chrome: Attach","description":"Attach to an instance of Chrome already in debug mode","body":{"type":"chrome","request":"attach","name":"Attach to Chrome","port":9222,"webRoot":"^\"${2:\\${workspaceFolder\\}}\""}}],"configurationAttributes":{"launch":{"required":[],"properties":{"port":{"type":"number","description":"Port to use for Chrome remote debugging.","default":9222},"address":{"type":"string","description":"TCP/IP address of debug port","default":"127.0.0.1"},"file":{"type":"string","description":"A local html file to open in the browser","default":"${workspaceFolder}/index.html"},"url":{"type":"string","description":"Will search for a tab with this EXACT url and attach to it, if found","default":"http://localhost:8080"},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}"},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk","default":{"/":"${workspaceFolder}"}},"runtimeExecutable":{"type":["string","null"],"description":"Workspace absolute path to the runtime executable to be used. If not specified, Chrome will be used from the default install location.","default":null},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","description":"Optional dictionary of environment key/value pairs.","default":{}},"cwd":{"type":"string","description":"Optional working directory for the runtime executable.","default":null},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console in a human readable format","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"userDataDir":{"type":["string","boolean"],"description":"By default, Chrome is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile.","default":true},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{"webpack:///./*":"${webRoot}/*","webpack:///src/*":"${webRoot}/*","webpack:///*":"*","webpack:///./~/*":"${webRoot}/node_modules/*","meteor://💻app/*":"${webRoot}/*"}},"smartStep":{"type":"boolean","description":"Automatically step through unmapped lines in sourcemapped files. For example, code that TypeScript produces automatically when downcompiling async/await or other features.","default":true},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":[]},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.","default":10000},"disableNetworkCache":{"type":"boolean","description":"Controls whether to skip the network cache for each request","default":true},"urlFilter":{"type":"string","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","default":""},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack","default":true},"breakOnLoad":{"type":"boolean","description":"Experimental feature -  If true, the debug adapter will attempt to set breakpoints in scripts before they are loaded, so it can hit breakpoints at the beginnings of those scripts. Has a perf impact.","default":true},"breakOnLoadStrategy":{"type":"string","enum":["instrument","regex"],"enumDescriptions":["Tell Chrome to pause as each script is loaded, resolving sourcemaps and setting breakpoints","Sets breakpoints optimistically in files with the same name as the file in which the breakpoint is set."],"description":"The strategy to use for breakOnLoad.","default":"instrument"},"targetTypes":{"type":["array","null"],"description":"An array of acceptable target types. The default is `[\"page\"]`.","default":["page"]}}},"attach":{"required":["port"],"properties":{"port":{"type":"number","description":"Port to use for Chrome remote debugging.","default":9222},"address":{"type":"string","description":"TCP/IP address of debug port","default":"127.0.0.1"},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console in a human readable format","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"url":{"type":"string","description":"Will search for a tab with this EXACT url and attach to it, if found","default":"http://localhost:8080"},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}"},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk","default":{}},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{}},"smartStep":{"type":"boolean","description":"Automatically step through unmapped lines in sourcemapped files. For example, code that TypeScript produces automatically when downcompiling async/await or other features.","default":true},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":[]},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.","default":10000},"disableNetworkCache":{"type":"boolean","description":"Controls whether to skip the network cache for each request","default":true},"urlFilter":{"type":"string","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","default":""},"targetTypes":{"type":["array","null"],"description":"An array of acceptable target types. The default is `[\"page\"]`.","default":["page"]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack","default":true}}}}}],"menus":{"debug/callstack/context":[{"command":"extension.chrome-debug.toggleSkippingFile","group":"navigation","when":"inDebugMode && debugType == 'chrome' && callStackItemType == 'stackFrame'"},{"command":"extension.chrome-debug.toggleSmartStep","group":"navigation","when":"inDebugMode && debugType == 'chrome' && callStackItemType == 'stackFrame'"}]},"commands":[{"command":"extension.chrome-debug.toggleSkippingFile","title":"Chrome: Toggle Skipping This File"},{"command":"extension.chrome-debug.toggleSmartStep","title":"Chrome: Toggle Smart Step"}],"keybindings":[{"command":"extension.node-debug.pickLoadedScript","key":"ctrl+f4","mac":"cmd+f4","when":"debugType == 'chrome'"}]},"uuid":"1ec62ca5-d7f9-4ddb-a882-e8d018c0aefd","isBuiltin":false,"isUnderDevelopment":false,"id":"msjsdiag.debugger-for-chrome","identifier":{"value":"msjsdiag.debugger-for-chrome","_lower":"msjsdiag.debugger-for-chrome"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/msjsdiag.debugger-for-chrome-4.11.3","path":"/home/fluper/.vscode/extensions/msjsdiag.debugger-for-chrome-4.11.3","scheme":"file"}},{"name":"RemoveConsoleLogs","displayName":"Remove Console Logs","description":"Removes console logs from current file opene in editor","version":"0.4.0","publisher":"NikhilMutkekar","engines":{"vscode":"^1.22.0"},"repository":{"url":"https://github.com/NikhilMutkekar/removeConsoleLogs.git"},"categories":["Other"],"activationEvents":["onCommand:extension.removeConsoleLogs"],"main":"/home/fluper/.vscode/extensions/nikhilmutkekar.removeconsolelogs-0.4.0/out/extension","contributes":{"keybindings":[{"key":"alt+c","command":"extension.removeConsoleLogs","when":"editorTextFocus"}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.6.1","vscode":"^1.1.6","tslint":"^5.8.0","@types/node":"^7.0.43","@types/mocha":"^2.2.42"},"uuid":"dc54f6c9-0ff6-45cd-af31-f8290041b1ad","isBuiltin":false,"isUnderDevelopment":false,"id":"NikhilMutkekar.RemoveConsoleLogs","identifier":{"value":"NikhilMutkekar.RemoveConsoleLogs","_lower":"nikhilmutkekar.removeconsolelogs"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/nikhilmutkekar.removeconsolelogs-0.4.0","path":"/home/fluper/.vscode/extensions/nikhilmutkekar.removeconsolelogs-0.4.0","scheme":"file"}},{"name":"Theme-GitHubCleanWhite","displayName":"GitHub Clean White Theme","description":"GitHub-like Theme for Visual Studio Code","version":"0.0.3","publisher":"saviorisdead","repository":"https://github.com/saviorisdead/vscode-github-clean-white-theme","engines":{"vscode":"^0.10.1"},"categories":["Themes"],"icon":"icon.png","contributes":{"themes":[{"label":"GitHub Clean White","uiTheme":"vs","path":"./themes/GitHubCleanWhite.tmTheme"}]},"uuid":"12fc8d63-f74f-44df-bd1b-a09d6f307f33","isBuiltin":false,"isUnderDevelopment":false,"id":"saviorisdead.Theme-GitHubCleanWhite","identifier":{"value":"saviorisdead.Theme-GitHubCleanWhite","_lower":"saviorisdead.theme-githubcleanwhite"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/saviorisdead.theme-githubcleanwhite-0.0.3","path":"/home/fluper/.vscode/extensions/saviorisdead.theme-githubcleanwhite-0.0.3","scheme":"file"}},{"name":"github-plus-theme","displayName":"GitHub Plus Theme","description":"A GitHub inspired color theme for VSCode code and interface!","version":"1.2.0","publisher":"thenikso","icon":"icon.png","repository":{"type":"git","url":"https://github.com/thenikso/github-plus-theme"},"bugs":{"url":"https://github.com/thenikso/github-plus-theme/issues"},"engines":{"vscode":"^1.16.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"GitHub Plus","uiTheme":"vs","path":"./themes/github-plus-theme.json"}]},"scripts":{"publish":"vsce publish"},"uuid":"d0db9e58-8cdf-49c5-87bf-02f037e10bb0","isBuiltin":false,"isUnderDevelopment":false,"id":"thenikso.github-plus-theme","identifier":{"value":"thenikso.github-plus-theme","_lower":"thenikso.github-plus-theme"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/thenikso.github-plus-theme-1.2.0","path":"/home/fluper/.vscode/extensions/thenikso.github-plus-theme-1.2.0","scheme":"file"}},{"name":"vscode-js-console-utils","displayName":"javascript console utils","description":"Help insert and remove console.(*) statements","version":"0.7.0","publisher":"whtouche","repository":"https://github.com/whtouche/vscode-js-console-utils","engines":{"vscode":"^1.5.0"},"categories":["Other"],"activationEvents":["onCommand:extension.insertLogStatement","onCommand:extension.deleteAllLogStatements"],"main":"/home/fluper/.vscode/extensions/whtouche.vscode-js-console-utils-0.7.0/extension","contributes":{"commands":[{"command":"extension.insertLogStatement","title":"Insert Log Statement"},{"command":"extension.deleteAllLogStatements","title":"Delete all console.log statements"}],"keybindings":[{"command":"extension.insertLogStatement","key":"shift+ctrl+l","mac":"shift+cmd+l","when":"editorTextFocus"},{"command":"extension.deleteAllLogStatements","key":"shift+ctrl+d","mac":"shift+cmd+d"}]},"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","eslint":"^3.6.0","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"uuid":"032ccf0d-9c21-43a5-8073-ae28e453ecef","isBuiltin":false,"isUnderDevelopment":false,"id":"whtouche.vscode-js-console-utils","identifier":{"value":"whtouche.vscode-js-console-utils","_lower":"whtouche.vscode-js-console-utils"},"extensionLocation":{"$mid":1,"fsPath":"/home/fluper/.vscode/extensions/whtouche.vscode-js-console-utils-0.7.0","path":"/home/fluper/.vscode/extensions/whtouche.vscode-js-console-utils-0.7.0","scheme":"file"}}]}